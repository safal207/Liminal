[tool:pytest]
# Pytest configuration for Resonance-Liminal (2025-01-01 v2.0.0-rc1)
# Настройки pytest для организованной структуры тестов

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for different test types
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium speed, some dependencies)
    e2e: End-to-end tests (slow, full system)
    slow: Slow running tests
    skip_ci: Skip in CI/CD pipeline
    ml: Tests requiring ML dependencies
    database: Tests requiring database
    websocket: Tests requiring WebSocket connections

# Test execution
addopts =
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    -ra
    --cov=backend
    --cov-report=html:tests/reports/coverage/html
    --cov-report=xml:tests/reports/coverage/coverage.xml
    --cov-report=term-missing

# Coverage settings
[coverage:run]
source = backend
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Async test settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Console output
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File logging
log_file = pytest_log.txt
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_file_date_format = %Y-%m-%d %H:%M:%S
