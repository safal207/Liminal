# TURBO ML BUILD SCRIPT –¥–ª—è Resonance Liminal
# –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ ML-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∫—Ä–∏–ø—Ç–∞
param(
    [switch]$CleanCache,    # –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à–∏ Docker –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
    [switch]$StartAfterBuild, # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏
    [switch]$TestAfterStart, # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
    [switch]$Production      # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å production–≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
$StartAfterBuild = $StartAfterBuild.IsPresent -or (-not $PSBoundParameters.ContainsKey('StartAfterBuild'))
$CleanCache = $CleanCache.IsPresent
$TestAfterStart = $TestAfterStart.IsPresent
$Production = $Production.IsPresent

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Green = [System.ConsoleColor]::Green
$Cyan = [System.ConsoleColor]::Cyan
$Yellow = [System.ConsoleColor]::Yellow
$Red = [System.ConsoleColor]::Red

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
function Write-Status($message, $color = $Cyan) {
    Write-Host $message -ForegroundColor $color
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
try {
    $dockerVersion = docker --version
    Write-Status "‚úÖ Docker –æ–±–Ω–∞—Ä—É–∂–µ–Ω: $dockerVersion" $Green
} catch {
    Write-Status "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop." $Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
try {
    $composeVersion = docker-compose --version
    Write-Status "‚úÖ Docker Compose –æ–±–Ω–∞—Ä—É–∂–µ–Ω: $composeVersion" $Green
} catch {
    Write-Status "‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" $Red
    exit 1
}

# –û—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
$projectDir = Split-Path -Parent (Split-Path -Parent $MyInvocation.MyCommand.Path)
Set-Location $projectDir
Write-Status "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $projectDir"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Docker BuildKit –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏
$env:DOCKER_BUILDKIT = 1
$env:COMPOSE_DOCKER_CLI_BUILD = 1
Write-Status "üöÄ BuildKit –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏" $Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if (-not (Test-Path ".env")) {
    Write-Status "üìÑ –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
    @"
OPENAI_API_KEY=demo_key
ANTHROPIC_API_KEY=demo_key
XAI_CACHE_SIZE=1000
XAI_ENABLE_SHAP=true
XAI_ENABLE_LIME=true
MULTI_LLM_FALLBACK_ENABLED=true
MULTI_LLM_CONSENSUS_THRESHOLD=0.7
MULTI_LLM_MODE=demo
"@ | Out-File -FilePath ".env" -Encoding utf8
}

# –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ Docker –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
if ($CleanCache) {
    Write-Status "üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–µ–π Docker..." $Yellow
    docker builder prune -f
    docker system prune -f
}

# –í—ã–±–æ—Ä docker-compose —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
$composeFile = if ($Production) { "docker-compose.ml.yml" } else { "docker-compose.ml.yml" }
Write-Status "üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $composeFile" $Cyan

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
Write-Status "üîß –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É Docker –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)..." $Cyan
$buildCommand = "docker-compose -f $composeFile build --parallel --progress plain"
Write-Status "> $buildCommand" $Yellow
Invoke-Expression $buildCommand

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–±–æ—Ä–∫–∏
if ($LASTEXITCODE -ne 0) {
    Write-Status "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ Docker –æ–±—Ä–∞–∑–æ–≤!" $Red
    exit 1
}

Write-Status "‚úÖ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" $Green

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if ($StartAfterBuild) {
    Write-Status "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..." $Cyan
    $startCommand = "docker-compose -f $composeFile up -d"
    Write-Status "> $startCommand" $Yellow
    Invoke-Expression $startCommand
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞
    if ($LASTEXITCODE -ne 0) {
        Write-Status "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏—Å—Ç–µ–º—ã!" $Red
        exit 1
    }
    
    Write-Status "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." $Yellow
    Start-Sleep -Seconds 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
    $services = docker-compose -f $composeFile ps --services
    foreach ($service in $services) {
        $status = docker-compose -f $composeFile ps $service | Select-String "Up"
        if ($status) {
            Write-Status "‚úÖ –°–µ—Ä–≤–∏—Å $service –∑–∞–ø—É—â–µ–Ω" $Green
        } else {
            Write-Status "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å $service –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –≥–æ—Ç–æ–≤" $Yellow
        }
    }
    
    # –í—ã–≤–æ–¥–∏–º URL –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–∏—Å–∞–º
    Write-Status "`nüîó –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:" $Cyan
    Write-Status "  ‚Ä¢ Backend API:  http://localhost:8000" $Green
    Write-Status "  ‚Ä¢ Prometheus:   http://localhost:9090" $Green
    Write-Status "  ‚Ä¢ Grafana:      http://localhost:3000" $Green
    Write-Status "  ‚Ä¢ MinIO:        http://localhost:9001" $Green
    Write-Status "  ‚Ä¢ Jupyter:      http://localhost:8888" $Green
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
    if ($TestAfterStart) {
        Write-Status "`nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." $Cyan
        $testCommand = ".\scripts\run-load-tests.ps1"
        Write-Status "> $testCommand" $Yellow
        Invoke-Expression $testCommand
    }
}

Write-Status "`nüéâ –ü—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!" $Green
Write-Status "   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose -f $composeFile down" $Cyan
