"""
üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebSocket –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è Neo4j Consciousness State Transitions
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –ø–æ–ª–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: Neo4j ‚Üí Redis ‚Üí Go WebSocket relay
"""

import json
import os
import time
import uuid
from datetime import datetime

import requests
from consciousness_neo4j import ConsciousnessNeo4jWriter
from consciousness_schema import (ConsciousnessNode, ConsciousnessState,
                                  StateTransition, TransitionTrigger)


def send_event_to_websocket(event_data):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ WebSocket relay —á–µ—Ä–µ–∑ HTTP"""
    try:
        url = "http://localhost:8080/events"
        headers = {"Content-Type": "application/json"}
        response = requests.post(url, json=event_data, headers=headers)

        if response.status_code == 200 or response.status_code == 202:
            print(
                f"‚úÖ –°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ WebSocket relay: {response.status_code}"
            )
            return True
        else:
            print(
                f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è: {response.status_code}, {response.text}"
            )
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è: {str(e)}")
        return False


def test_consciousness_websocket_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π —á–µ—Ä–µ–∑ WebSocket relay"""

    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ WebSocket –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è Consciousness...")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Neo4j Writer (—Ç–æ–ª—å–∫–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ–ª—å—é –¥–∞–Ω–Ω—ã—Ö)
    writer = ConsciousnessNeo4jWriter()

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–Ω–∞–Ω–∏—è
    initial_state = ConsciousnessNode(
        id=str(uuid.uuid4()),
        state=ConsciousnessState.TRANSITION_LIMINAL,
        timestamp=datetime.now(),
        home_resonance=0.5,
        presence_level=0.6,
        harmony_index=0.4,
        authenticity_score=0.7,
        emotional_charge=50.0,
        stress_level=0.3,
    )

    print(f"üß† –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {initial_state.state.value}")
    created_state = writer.create_consciousness_state(initial_state)
    print(f"‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ Neo4j: {created_state['id']}")

    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π
    time.sleep(1)

    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º —É—Ä–æ–≤–Ω–µ–º –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
    new_state = ConsciousnessNode(
        id=str(uuid.uuid4()),
        state=ConsciousnessState.PRESENCE_NOW,
        timestamp=datetime.now(),
        home_resonance=0.5,
        presence_level=0.8,  # –ü–æ–≤—ã—à–µ–Ω–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
        harmony_index=0.5,  # –°–ª–µ–≥–∫–∞ –ø–æ–≤—ã—Å–∏–ª–∞—Å—å –≥–∞—Ä–º–æ–Ω–∏—è
        authenticity_score=0.7,
        emotional_charge=45.0,
        stress_level=0.25,  # –ü–æ–Ω–∏–∑–∏–ª—Å—è —Å—Ç—Ä–µ—Å—Å
    )

    print(f"üß† –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {new_state.state.value}")
    created_new_state = writer.create_consciousness_state(new_state)
    print(f"‚úÖ –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –≤ Neo4j: {created_new_state['id']}")

    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
    transition = StateTransition(
        id=str(uuid.uuid4()),
        from_state=initial_state.state,
        to_state=new_state.state,
        trigger=TransitionTrigger.DEEP_BREATH,
        timestamp=datetime.now(),
        duration_seconds=1.0,
        home_resonance_delta=0.0,
        presence_delta=0.2,  # +0.2 –∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—é
        harmony_delta=0.1,  # +0.1 –∫ –≥–∞—Ä–º–æ–Ω–∏–∏
        authenticity_delta=0.0,
        trigger_data={"breath_depth": 0.85, "breath_duration": 4.5},
    )

    print(
        f"üîÑ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {transition.from_state.value} ‚Üí {transition.to_state.value}"
    )
    print(
        f"üìä Presence +{transition.presence_delta}, Harmony +{transition.harmony_delta}"
    )

    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –≤ Neo4j
    created_transition = writer.create_state_transition(
        transition, initial_state.id, new_state.id
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ WebSocket relay —á–µ—Ä–µ–∑ HTTP
    event = {
        "type": "state_transition",
        "from_state": transition.from_state.value,
        "to_state": transition.to_state.value,
        "transition_id": transition.id,
        "timestamp": transition.timestamp.isoformat(),
        "trigger": transition.trigger.value,
        "presence_delta": transition.presence_delta,
        "harmony_delta": transition.harmony_delta,
        "authenticity_delta": transition.authenticity_delta,
        "trigger_data": transition.trigger_data,
    }

    send_event_to_websocket(event)

    print(f"‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–æ–∑–¥–∞–Ω –≤ Neo4j –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ WebSocket relay!")
    print(
        f"üîå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ WebSocket-–∫–ª–∏–µ–Ω—Ç, –≤—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å —Å–æ–±—ã—Ç–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è."
    )

    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ WebSocket-–∫–ª–∏–µ–Ω—Ç–µ
    time.sleep(1)

    # –°–æ–∑–¥–∞–¥–∏–º –µ—â–µ –æ–¥–∏–Ω –ø–µ—Ä–µ—Ö–æ–¥ —Å –¥—Ä—É–≥–∏–º —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
    meditation_state = ConsciousnessNode(
        id=str(uuid.uuid4()),
        state=ConsciousnessState.HARMONY_BALANCE,
        timestamp=datetime.now(),
        home_resonance=0.6,
        presence_level=0.9,  # –ï—â–µ –ø–æ–≤—ã—à–µ–Ω–Ω–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ
        harmony_index=0.7,  # –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è –≥–∞—Ä–º–æ–Ω–∏—è
        authenticity_score=0.8,
        emotional_charge=30.0,
        stress_level=0.1,  # –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ–Ω–∏–∂–µ–Ω–Ω—ã–π —Å—Ç—Ä–µ—Å—Å
    )

    print(f"üß† –°–æ–∑–¥–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–µ–¥–∏—Ç–∞—Ü–∏–∏: {meditation_state.state.value}")
    created_meditation = writer.create_consciousness_state(meditation_state)

    meditation_transition = StateTransition(
        id=str(uuid.uuid4()),
        from_state=new_state.state,
        to_state=meditation_state.state,
        trigger=TransitionTrigger.MEDITATION,
        timestamp=datetime.now(),
        duration_seconds=180.0,  # 3 –º–∏–Ω—É—Ç—ã –º–µ–¥–∏—Ç–∞—Ü–∏–∏
        home_resonance_delta=0.1,
        presence_delta=0.1,
        harmony_delta=0.2,  # –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç –≥–∞—Ä–º–æ–Ω–∏–∏
        authenticity_delta=0.1,
        trigger_data={"meditation_type": "mindfulness", "duration_minutes": 3},
    )

    print(
        f"üîÑ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–¥–∏—Ç–∞—Ü–∏–∏: {meditation_transition.from_state.value} ‚Üí {meditation_transition.to_state.value}"
    )
    print(
        f"üìä Harmony +{meditation_transition.harmony_delta}, Home Resonance +{meditation_transition.home_resonance_delta}"
    )

    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ –≤ Neo4j
    created_meditation_transition = writer.create_state_transition(
        meditation_transition, new_state.id, meditation_state.id
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–±—ã—Ç–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ WebSocket relay —á–µ—Ä–µ–∑ HTTP
    meditation_event = {
        "type": "state_transition",
        "from_state": meditation_transition.from_state.value,
        "to_state": meditation_transition.to_state.value,
        "transition_id": meditation_transition.id,
        "timestamp": meditation_transition.timestamp.isoformat(),
        "trigger": meditation_transition.trigger.value,
        "presence_delta": meditation_transition.presence_delta,
        "harmony_delta": meditation_transition.harmony_delta,
        "authenticity_delta": meditation_transition.authenticity_delta,
        "trigger_data": meditation_transition.trigger_data,
    }

    send_event_to_websocket(meditation_event)

    print(f"‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –º–µ–¥–∏—Ç–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω –≤ Neo4j –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ WebSocket relay!")
    print(
        f"üåê –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã WebSocket –ø–æ–ª—É—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {meditation_state.state.value}"
    )

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Neo4j
    writer.close()

    # –°–æ–∑–¥–∞–¥–∏–º —Å–æ–±—ã—Ç–∏–µ Home State –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–π –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
    home_state = ConsciousnessNode(
        id=str(uuid.uuid4()),
        state=ConsciousnessState.HOME_AUTHENTIC,
        timestamp=datetime.now(),
        home_resonance=0.9,  # –í—ã—Å–æ–∫–∏–π —Ä–µ–∑–æ–Ω–∞–Ω—Å —Å –¥–æ–º–æ–º
        presence_level=0.85,
        harmony_index=0.8,
        authenticity_score=0.95,  # –í—ã—Å–æ–∫–∞—è –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å - –∫–ª—é—á–µ–≤–æ–π –∞—Ç—Ä–∏–±—É—Ç Home State
        emotional_charge=20.0,
        stress_level=0.05,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ç—Ä–µ—Å—Å
    )

    print(
        f"üè† –°–æ–∑–¥–∞–µ–º Home State: {home_state.state.value} (–î–æ–º - —ç—Ç–æ —Ç—ã, –∫–æ–≥–¥–∞ –∏—Å–∫—Ä–µ–Ω–µ–Ω —Å —Å–æ–±–æ–π)"
    )
    created_home_state = writer.create_consciousness_state(home_state)

    home_transition = StateTransition(
        id=str(uuid.uuid4()),
        from_state=meditation_state.state,
        to_state=home_state.state,
        trigger=TransitionTrigger.AUTHENTICITY_INSIGHT,
        timestamp=datetime.now(),
        duration_seconds=5.0,
        home_resonance_delta=0.3,  # –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç —Ä–µ–∑–æ–Ω–∞–Ω—Å–∞ —Å –¥–æ–º–æ–º
        presence_delta=-0.05,  # –ù–µ–±–æ–ª—å—à–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏—è
        harmony_delta=0.1,
        authenticity_delta=0.15,  # –†–æ—Å—Ç –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏
        trigger_data={
            "insight_type": "home_recognition",
            "authenticity_threshold": 0.9,
        },
    )

    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –∫ Home State –≤ Neo4j
    created_home_transition = writer.create_state_transition(
        home_transition, meditation_state.id, home_state.id
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–µ—Ç—å–µ —Å–æ–±—ã—Ç–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥ –∫ Home State
    home_event = {
        "type": "state_transition",
        "from_state": home_transition.from_state.value,
        "to_state": home_transition.to_state.value,
        "transition_id": home_transition.id,
        "timestamp": home_transition.timestamp.isoformat(),
        "trigger": home_transition.trigger.value,
        "presence_delta": home_transition.presence_delta,
        "harmony_delta": home_transition.harmony_delta,
        "authenticity_delta": home_transition.authenticity_delta,
        "home_resonance_delta": home_transition.home_resonance_delta,
        "trigger_data": home_transition.trigger_data,
        "philosophical_insight": "–î–æ–º - —ç—Ç–æ –Ω–µ –º–µ—Å—Ç–æ. –î–æ–º - —ç—Ç–æ —Ç—ã, –∫–æ–≥–¥–∞ —Ç—ã –∏—Å–∫—Ä–µ–Ω–µ–Ω —Å —Å–æ–±–æ–π.",
    }

    send_event_to_websocket(home_event)

    print(f"üè† –ü–µ—Ä–µ—Ö–æ–¥ –∫ Home State —Å–æ–∑–¥–∞–Ω –≤ Neo4j –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ WebSocket relay!")
    print(f"üåü –§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∏–Ω—Å–∞–π—Ç: –î–æ–º - —ç—Ç–æ —Ç—ã, –∫–æ–≥–¥–∞ –∏—Å–∫—Ä–µ–Ω–µ–Ω —Å —Å–æ–±–æ–π")

    print("üèÜ –¢–µ—Å—Ç—ã WebSocket –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print("üîå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∫–ª–∞–¥–∫—É —Å HTML-–∫–ª–∏–µ–Ω—Ç–æ–º –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏–π")
    print(
        "üß† –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –ø–µ—Ä–µ—Ö–æ–¥–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π —Å–æ–∑–Ω–∞–Ω–∏—è: TRANSITION_LIMINAL ‚Üí PRESENCE_NOW ‚Üí HARMONY_BALANCE ‚Üí HOME_AUTHENTIC"
    )


if __name__ == "__main__":
    test_consciousness_websocket_integration()
