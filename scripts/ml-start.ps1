# ML-INFRASTRUCTURE START SCRIPT –¥–ª—è Resonance Liminal
# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ ML-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏

param(
    [switch]$Demo,          # –ó–∞–ø—É—Å–∫ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —Å —É–ø—Ä–æ—â–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    [switch]$RunTests,      # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
    [switch]$OpenDashboard  # –û—Ç–∫—Ä—ã—Ç—å Grafana –¥–∞—à–±–æ—Ä–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
$Demo = $Demo.IsPresent
$RunTests = $RunTests.IsPresent
$OpenDashboard = $OpenDashboard.IsPresent

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$Green = [System.ConsoleColor]::Green
$Cyan = [System.ConsoleColor]::Cyan
$Yellow = [System.ConsoleColor]::Yellow
$Red = [System.ConsoleColor]::Red

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
function Write-Status($message, $color = $Cyan) {
    Write-Host $message -ForegroundColor $color
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
$projectDir = Split-Path -Parent (Split-Path -Parent $MyInvocation.MyCommand.Path)
Set-Location $projectDir
Write-Status "üìÇ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $projectDir"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
try {
    $dockerVersion = docker --version
    Write-Status "‚úÖ Docker –æ–±–Ω–∞—Ä—É–∂–µ–Ω: $dockerVersion" $Green
} catch {
    Write-Status "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop." $Red
    exit 1
}

# –í—ã–±–∏—Ä–∞–µ–º docker-compose —Ñ–∞–π–ª
$composeFile = "docker-compose.ml.yml"
Write-Status "üìã –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $composeFile" $Cyan

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if (-not (Test-Path ".env")) {
    Write-Status "üìÑ –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    
    if ($Demo) {
        Write-Status "üß™ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –î–ï–ú–û —Ä–µ–∂–∏–º–∞ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏ API" $Yellow
        $apiKeyConfig = @"
OPENAI_API_KEY=demo_key
ANTHROPIC_API_KEY=demo_key
XAI_CACHE_SIZE=1000
XAI_ENABLE_SHAP=true
XAI_ENABLE_LIME=true
MULTI_LLM_FALLBACK_ENABLED=true
MULTI_LLM_CONSENSUS_THRESHOLD=0.7
MULTI_LLM_MODE=demo
"@
    } else {
        Write-Status "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PRODUCTION —Ä–µ–∂–∏–º–∞" $Yellow
        $openAiKey = Read-Host "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à OpenAI API –∫–ª—é—á (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è demo_key)"
        if ([string]::IsNullOrWhiteSpace($openAiKey)) { $openAiKey = "demo_key" }
        
        $anthropicKey = Read-Host "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Anthropic API –∫–ª—é—á (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è demo_key)"
        if ([string]::IsNullOrWhiteSpace($anthropicKey)) { $anthropicKey = "demo_key" }
        
        $apiKeyConfig = @"
OPENAI_API_KEY=$openAiKey
ANTHROPIC_API_KEY=$anthropicKey
XAI_CACHE_SIZE=2000
XAI_ENABLE_SHAP=true
XAI_ENABLE_LIME=true
MULTI_LLM_FALLBACK_ENABLED=true
MULTI_LLM_CONSENSUS_THRESHOLD=0.8
MULTI_LLM_MODE=production
"@
    }
    
    $apiKeyConfig | Out-File -FilePath ".env" -Encoding utf8
    Write-Status "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!" $Green
}

# –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
Write-Status "üöÄ –ó–∞–ø—É—Å–∫ ML-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã..." $Cyan
docker-compose -f $composeFile up -d

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞
if ($LASTEXITCODE -ne 0) {
    Write-Status "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤!" $Red
    exit 1
}

Write-Status "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..." $Yellow
Start-Sleep -Seconds 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
$backend_status = docker-compose -f $composeFile ps backend | Select-String "Up"
if ($backend_status) {
    Write-Status "‚úÖ Backend —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ" $Green
} else {
    Write-Status "‚ö†Ô∏è Backend —Å–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –≥–æ—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..." $Yellow
    docker-compose -f $composeFile logs --tail=20 backend
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Kenning ML —Å–µ—Ä–≤–∏—Å
$kenning_status = docker-compose -f $composeFile ps kenning | Select-String "Up"
if ($kenning_status) {
    Write-Status "‚úÖ ML —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ" $Green
} else {
    Write-Status "‚ö†Ô∏è ML —Å–µ—Ä–≤–∏—Å –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –≥–æ—Ç–æ–≤, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..." $Yellow
    docker-compose -f $composeFile logs --tail=20 kenning
}

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–∞—Ö
Write-Status "`nüîó –î–æ—Å—Ç—É–ø –∫ ML-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ:" $Cyan
Write-Status "  ‚Ä¢ Backend API:  http://localhost:8000" $Green
Write-Status "  ‚Ä¢ ML API:       http://localhost:8000/ml_docs" $Green
Write-Status "  ‚Ä¢ Prometheus:   http://localhost:9090" $Green
Write-Status "  ‚Ä¢ Grafana:      http://localhost:3000 (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å: admin/admin)" $Green
Write-Status "  ‚Ä¢ Jupyter:      http://localhost:8888" $Green
Write-Status "  ‚Ä¢ MinIO:        http://localhost:9001 (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å: minioadmin/minioadmin)" $Green

# –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if ($RunTests) {
    Write-Status "`nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –Ω–∞–≥—Ä—É–∑–∫–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏..." $Cyan
    & "$projectDir\scripts\run-load-tests.ps1"
}

# –û—Ç–∫—Ä—ã–≤–∞–µ–º Grafana –¥–∞—à–±–æ—Ä–¥, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥
if ($OpenDashboard) {
    Write-Status "`nüìä –û—Ç–∫—Ä—ã–≤–∞–µ–º Grafana –¥–∞—à–±–æ—Ä–¥..." $Cyan
    Start-Process "http://localhost:3000"
}

Write-Status "`nüéâ ML-–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!" $Green
Write-Status "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ API –ø–æ –∞–¥—Ä–µ—Å—É http://localhost:8000" $Cyan
Write-Status "   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker-compose -f $composeFile down" $Cyan
