import asyncio
import json
import time

import websockets


async def test_websocket():
    print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É...")
    try:
        async with websockets.connect(
            "ws://localhost:8000/ws/test_user_1", ping_interval=None
        ) as websocket:
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ WebSocket —Å–µ—Ä–≤–µ—Ä—É")

            # –¢–µ—Å—Ç –ø–æ–¥–ø–∏—Å–∫–∏
            subscribe_msg = {
                "type": "subscribe",
                "user_id": "test_user_1",
                "channel": "test_channel",
            }
            await websocket.send(json.dumps(subscribe_msg))
            print(f"üì® –û—Ç–ø—Ä–∞–≤–∏–ª–∏ –∑–∞–ø—Ä–æ—Å: {subscribe_msg}")

            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            try:
                response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                print(f"üì© –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response}")

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                test_msg = {
                    "type": "message",
                    "user_id": "test_user_1",
                    "channel": "test_channel",
                    "message": "–¢–µ—Å—Ç",
                    "timestamp": time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime()),
                }
                await websocket.send(json.dumps(test_msg))
                print("üì® –û—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

                # –ñ–¥–µ–º –æ—Ç–≤–µ—Ç
                response = await asyncio.wait_for(websocket.recv(), timeout=5.0)
                print(f"üì© –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: {response}")

            except TimeoutError:
                print("‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏: {str(e)}")

            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")


if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(test_websocket())
