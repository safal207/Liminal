(require '[datomic.client.api :as d])

(def client
  (d/client {:server-type :datomic-local
             :system "dev"
             :storage-dir :mem})) ; –¥–ª—è –ø–∞–º—è—Ç–∏

(println "‚úÖ –ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤")

(def db-name "liminal-memory")

(try
  (d/create-database client {:db-name db-name})
  (println "‚úÖ –ë–∞–∑–∞ —Å–æ–∑–¥–∞–Ω–∞")
  (catch Exception _ (println "‚ö†Ô∏è –ë–∞–∑–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")))

(def conn (d/connect client {:db-name db-name}))
(println "‚úÖ –ë–∞–∑–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")

(d/transact conn {:tx-data
  [{:db/ident :concept/name
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    :db/doc "–ò–º—è –∫–æ–Ω—Ü–µ–ø—Ç–∞"
    :db.install/_attribute :db.part/db}

   {:db/ident :concept/lang
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    :db/doc "–Ø–∑—ã–∫"
    :db.install/_attribute :db.part/db}]})

(d/transact conn {:tx-data
  [{:concept/name "—Å—Ç—Ä–∞—Ö" :concept/lang "ru"}
   {:concept/name "–Ω–∞–¥–µ–∂–¥–∞" :concept/lang "ru"}
   {:concept/name "fear"   :concept/lang "en"}
   {:concept/name "hope"   :concept/lang "en"}]})

(println "\nüîç –ö–æ–Ω—Ü–µ–ø—Ç—ã:")
(d/q '[:find ?name ?lang
       :where [?c :concept/name ?name]
              [?c :concept/lang ?lang]]
     (d/db conn))

(d/transact conn {:tx-data
  [{:db/ident :concept/relates-to
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/many
    :db/doc "–°–≤—è–∑—å –º–µ–∂–¥—É –∫–æ–Ω—Ü–µ–ø—Ç–∞–º–∏"
    :db.install/_attribute :db.part/db}

   {:db/ident :concept/translates-to
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    :db/doc "–ü–µ—Ä–µ–≤–æ–¥ –∫–æ–Ω—Ü–µ–ø—Ç–∞"
    :db.install/_attribute :db.part/db}]})

(def db (d/db conn))

(defn eid [name lang]
  (ffirst
    (d/q '[:find ?e
           :in $ ?name ?lang
           :where [?e :concept/name ?name]
                  [?e :concept/lang ?lang]]
         db name lang)))

(def —Å—Ç—Ä–∞—Ö (eid "—Å—Ç—Ä–∞—Ö" "ru"))
(def –Ω–∞–¥–µ–∂–¥–∞ (eid "–Ω–∞–¥–µ–∂–¥–∞" "ru"))
(def fear   (eid "fear" "en"))
(def hope   (eid "hope" "en"))

(d/transact conn {:tx-data
  [[:db/add —Å—Ç—Ä–∞—Ö :concept/relates-to –Ω–∞–¥–µ–∂–¥–∞]
   [:db/add —Å—Ç—Ä–∞—Ö :concept/translates-to fear]
   [:db/add –Ω–∞–¥–µ–∂–¥–∞ :concept/translates-to hope]]})

(println "\nüîó –°–≤—è–∑–∏ –æ—Ç '—Å—Ç—Ä–∞—Ö':")
(d/q '[:find ?to-name
       :in $ ?from
       :where [?from :concept/relates-to ?to]
              [?to :concept/name ?to-name]]
     db —Å—Ç—Ä–∞—Ö)
